/src
    |_index.js
    |_ui/
        |_layout/
            |_App.js
            |_Header.js
            |_Footer.js
            |_Main.js
        |_componentes/
        |_paginas/
    |_api/
        |_store.js
        |_reducer.js
        |_actions.js


REDUX : Implementa el patron de diseño pub-sub y esta conformado por store, reducer,action

HoC : Higher Order Component



PRIMITIVOS

String
Number
Boolean
undefined
null
Symbol

Object



FUNCIONES GENERADORAS

function* foo(){

}


function *foo(){

}


let iterator = foo()



PROTOCOLO ITERABLE - ITERATOR

SYMBOL


let a = {
    next : function(){

        let i = 0

        i++

        return {
            done : false,
            value : i
        }

    }
}



REACT-ROUTER-DOM

ROUTERS : Proveen a la aplicacion del manejo del historial

    BrowserRouter : History API 
    HashRouter : location.hash
    MemoryRouter : cuando no tengo history ni hash
    StaticRouter : SSR (server side rendering)






Patron de diseño : Render Props - 



<Padre>
    <Hijo></Hijo>
</Padre>

<Padre children={Hijo}>
    





class Padre extends React.Component {

    render(){
        return(
            <>
            <p>Padre</p>
            <section>
            {this.props.children}
            </section>
            </>
        )
    }
}


let Padre = (props) => {
    console.log(props.children)
    return <p>Padre</p>
} 


let Hijo = () => {
    return <p>Hijo</p>
}


Code Splitting / Dynamic Imports


https://www.npmjs.com/package/react-toastify
https://jwt.io/


CAPPED COLLECTIONS

createIndex({token:TTL})